{
  "stats": {
    "suites": 2,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-13T07:50:53.866Z",
    "end": "2022-10-13T07:50:56.528Z",
    "duration": 2662,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "baa37f32-47e6-4fbb-b4f9-e2faefab937d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c093937f-422b-40eb-b6ac-64ddfc39fe40",
          "title": "Web lokasi",
          "fullFile": "/home/ardan/Ardan/QA/Automation Test/Git/dev-ardan/test/scenarios/SentraLokasi_Lokasi.test.js",
          "file": "/test/scenarios/SentraLokasi_Lokasi.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add lokasi",
              "fullTitle": "Web lokasi Add lokasi",
              "timedOut": false,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.addLokasi(data.VALID_ADDLOKASI, token)\n//result\nassert.equal(response.status, 200)\n//response data\nconst data_res_data = Object.fromEntries(\n    Object.entries(response.data.data['data']).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n    );\nconst data_res_fasilitas = Object.fromEntries(\n    Object.entries(response.data.data['fasilitas']).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\nconst data_in_data = Object.fromEntries(\n    Object.entries(data.VALID_ADDLOKASI['data']).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\nconst data_in_fasilitas = Object.fromEntries(\n    Object.entries(data.VALID_ADDLOKASI['fasilitas']).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );           \n  //validasi exclude\n  assert.deepEqualExcludingEvery(data_res_data, data_in_data, ['deleted_at', 'created_at', 'alamat', 'description', 'id', 'updated_at', 'is_active', 'm_lokasi_id'])\n\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_ADD_LOKASI_SCHEMA)",
              "err": {},
              "uuid": "d72786fc-b956-4eba-b955-ae0f65e69fa9",
              "parentUUID": "c093937f-422b-40eb-b6ac-64ddfc39fe40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add multi lokasi",
              "fullTitle": "Web lokasi Add multi lokasi",
              "timedOut": false,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.addMultilokasi(data.VALID_ADDMULTILOKASI, token)\n//result\nassert.equal(response.status, 200)\n//response data\nconst data_res_data = Object.fromEntries(\n    Object.entries(response.data.data[0].data).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n    );\nconst data_res_fasilitas = Object.fromEntries(\n    Object.entries(response.data.data[0].fasilitas).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\nconst data_in_data = Object.fromEntries(\n    Object.entries(data.VALID_ADDMULTILOKASI[0].data).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\nconst data_in_fasilitas = Object.fromEntries(\n    Object.entries(data.VALID_ADDMULTILOKASI[0].fasilitas).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );           \n  //validasi exclude\n  assert.deepEqualExcludingEvery(data_res_data, data_in_data, ['deleted_at', 'created_at', 'alamat', 'description', 'id', 'updated_at', 'is_active', 'm_lokasi_id'])\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_ADDSENTRAMULTILOKASI_WEBADMIN_SCHEMA)",
              "err": {},
              "uuid": "02d9df66-606a-4da5-bfff-df337505bdb7",
              "parentUUID": "c093937f-422b-40eb-b6ac-64ddfc39fe40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dan Cek Data Multi Lokasi",
              "fullTitle": "Web lokasi Get dan Cek Data Multi Lokasi",
              "timedOut": false,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.getLokasi(token)\n//result\nassert.equal(response.status, 200)\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_GETSENTRALOKASI_WEBADMIN_SCHEMA)",
              "err": {},
              "uuid": "3cf2bd59-ace5-4944-b6f3-e16174a6bb2f",
              "parentUUID": "c093937f-422b-40eb-b6ac-64ddfc39fe40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit lokasi",
              "fullTitle": "Web lokasi Edit lokasi",
              "timedOut": false,
              "duration": 934,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.updateLokasi(id, data.VALID_PUTLOKASI, token)\n//result\nassert.equal(response.status, 200)\n//response data\nconst data_res_data = Object.fromEntries(\n    Object.entries(response.data.data['data']).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n    );\nconst data_res_fasilitas = Object.fromEntries(\n    Object.entries(response.data.data['fasilitas']).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\nconst data_in_data = Object.fromEntries(\n    Object.entries(data.VALID_PUTLOKASI['data']).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\nconst data_in_fasilitas = Object.fromEntries(\n    Object.entries(data.VALID_PUTLOKASI['fasilitas']).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );           \n  //validasi exclude\n  assert.deepEqualExcludingEvery(data_res_data, data_in_data, ['deleted_at', 'created_at', 'alamat', 'description', 'id', 'updated_at', 'is_active', 'm_lokasi_id'])\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_EDIT_LOKASI_SCHEMA)",
              "err": {},
              "uuid": "7e0d4ab1-031b-4c77-b47e-c1a783330b9a",
              "parentUUID": "c093937f-422b-40eb-b6ac-64ddfc39fe40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hapus lokasi",
              "fullTitle": "Web lokasi Hapus lokasi",
              "timedOut": false,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.deleteLokasi(id, token)\n//result\nassert.equal(response.status, 200)\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_DELETE_LOKASI_SCHEMA)",
              "err": {},
              "uuid": "1310cafa-c737-45aa-811a-48237173129f",
              "parentUUID": "c093937f-422b-40eb-b6ac-64ddfc39fe40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dan Cek Image Lokasi",
              "fullTitle": "Web lokasi Get dan Cek Image Lokasi",
              "timedOut": false,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.getImagelokasi(id, token)\n//result\nassert.equal(response.status, 200)\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_GETIMAGELOKASI_SCHEMA)",
              "err": {},
              "uuid": "16d66f48-56d2-4143-972f-0c8cdde22824",
              "parentUUID": "c093937f-422b-40eb-b6ac-64ddfc39fe40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Fasilitas Lokasi",
              "fullTitle": "Web lokasi Get Fasilitas Lokasi",
              "timedOut": false,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.getFasilitaslokasi(id, token)\n//result\nassert.equal(response.status, 200)\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_GETFASILITASLOKASI_SCHEMA)",
              "err": {},
              "uuid": "0d346b33-6951-41d1-a011-5455885d2038",
              "parentUUID": "c093937f-422b-40eb-b6ac-64ddfc39fe40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Lokasi By Id",
              "fullTitle": "Web lokasi Get Lokasi By Id",
              "timedOut": false,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.getLokasibyid(id, token)\n//result\n// assert.equal(response.status, 200)\n// expect(response.data).to.be.jsonSchema(schema.VALIDATE_GETLOKASIBYID_SCHEMA)",
              "err": {},
              "uuid": "e416ee69-e9d7-4f11-b668-72e101a890e4",
              "parentUUID": "c093937f-422b-40eb-b6ac-64ddfc39fe40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d72786fc-b956-4eba-b955-ae0f65e69fa9",
            "02d9df66-606a-4da5-bfff-df337505bdb7",
            "3cf2bd59-ace5-4944-b6f3-e16174a6bb2f",
            "7e0d4ab1-031b-4c77-b47e-c1a783330b9a",
            "1310cafa-c737-45aa-811a-48237173129f",
            "16d66f48-56d2-4143-972f-0c8cdde22824",
            "0d346b33-6951-41d1-a011-5455885d2038",
            "e416ee69-e9d7-4f11-b668-72e101a890e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "4bc4a869-7ed5-4d2f-bd2e-b2dde3dc16f2",
          "title": "Mobile lokasi",
          "fullFile": "/home/ardan/Ardan/QA/Automation Test/Git/dev-ardan/test/scenarios/SentraLokasi_Lokasi.test.js",
          "file": "/test/scenarios/SentraLokasi_Lokasi.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get haversin circle",
              "fullTitle": "Mobile lokasi Get haversin circle",
              "timedOut": false,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.get_haversin_circle(token_mobile);\n    \nassert.equal(response.status, 200)\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_HAVERSINCIRCLE_SCHEMA)",
              "err": {},
              "uuid": "e4e1727f-5b17-49ed-94fa-34331d1b2c67",
              "parentUUID": "4bc4a869-7ed5-4d2f-bd2e-b2dde3dc16f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get haversin circle by kategori",
              "fullTitle": "Mobile lokasi Get haversin circle by kategori",
              "timedOut": false,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.get_haversin_circle_bykategori(token_mobile);\n    \nassert.equal(response.status, 200)\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_HAVERSINCIRCLE_BYKATEGORI_SCHEMA)",
              "err": {},
              "uuid": "b1163720-38ec-4eaf-91a5-657dac9df16c",
              "parentUUID": "4bc4a869-7ed5-4d2f-bd2e-b2dde3dc16f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get haversin lokasi by id",
              "fullTitle": "Mobile lokasi Get haversin lokasi by id",
              "timedOut": false,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.get_lokasi_byid(id, token_mobile);\n    \nassert.equal(response.status, 200)\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_KATEGORIBYID_SCHEMA)",
              "err": {},
              "uuid": "f9875042-3bcd-4552-a627-f3c7d51fb97f",
              "parentUUID": "4bc4a869-7ed5-4d2f-bd2e-b2dde3dc16f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4e1727f-5b17-49ed-94fa-34331d1b2c67",
            "b1163720-38ec-4eaf-91a5-657dac9df16c",
            "f9875042-3bcd-4552-a627-f3c7d51fb97f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 409,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports"
      },
      "version": "6.2.0"
    }
  }
}