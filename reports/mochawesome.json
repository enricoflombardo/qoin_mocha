{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-13T02:05:59.589Z",
    "end": "2022-10-13T02:06:01.784Z",
    "duration": 2195,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8efcce58-35d4-41a9-81be-771b67037922",
      "title": "",
      "fullFile": "/home/ardan/Ardan/QA/Automation Test/Git/dev-ardan/test/scenarios/SentraLokasi_Lokasi.test.js",
      "file": "/test/scenarios/SentraLokasi_Lokasi.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "544cb4cf-c0df-4079-9107-0c4bbb532e6e",
          "title": "Web lokasi",
          "fullFile": "/home/ardan/Ardan/QA/Automation Test/Git/dev-ardan/test/scenarios/SentraLokasi_Lokasi.test.js",
          "file": "/test/scenarios/SentraLokasi_Lokasi.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add lokasi",
              "fullTitle": "Web lokasi Add lokasi",
              "timedOut": false,
              "duration": 743,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.addLokasi(data.VALID_ADDLOKASI, token)\n//result\nassert.equal(response.status, 200)\n//response data\nlet resultObject = {};\nObject.keys(response.data.data).map((key) => { // iterate over the keys\nresultObject = {\n    ...resultObject,\n    ['data']: {...response.data.data['data'], ...response.data.data['fasilitas']} // merge two or more objects \n}\nreturn;\n});\n\nconst data_res = Object.fromEntries(\n    Object.entries(resultObject.data).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\nconst data_in = Object.fromEntries(\n    Object.entries(data.VALID_ADDLOKASI).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\n  console.log(resultObject);\n  //exclude\n//   assert.deepEqualExcluding()\n\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_ADD_LOKASI_SCHEMA)",
              "err": {},
              "uuid": "8732a3b3-b854-45c9-9ce6-7c918623784a",
              "parentUUID": "544cb4cf-c0df-4079-9107-0c4bbb532e6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add multi lokasi",
              "fullTitle": "Web lokasi Add multi lokasi",
              "timedOut": false,
              "duration": 670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.addMultilokasi(data.VALID_ADDMULTILOKASI, token)\n//result\nassert.equal(response.status, 200)\nlet resultObject = {};\nObject.keys(response.data.data).map((key) => { // iterate over the keys\nresultObject = {\n    ...resultObject,\n    ['data']: {...response.data.data['data'], ...response.data.data['fasilitas']} // merge two or more objects \n}\nreturn;\n});\n\nconst data_res = Object.fromEntries(\n    Object.entries(resultObject.data).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\nconst data_in = Object.fromEntries(\n    Object.entries(data.VALID_ADDMULTILOKASI).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\n  //exclude\n//   assert.deepEqualExcluding()\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_ADDSENTRAMULTILOKASI_WEBADMIN_SCHEMA)",
              "err": {},
              "uuid": "29f913a2-c448-42c8-8df9-cccd546c9f5b",
              "parentUUID": "544cb4cf-c0df-4079-9107-0c4bbb532e6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dan Cek Data Multi Lokasi",
              "fullTitle": "Web lokasi Get dan Cek Data Multi Lokasi",
              "timedOut": false,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.getLokasi(token)\n//result\nassert.equal(response.status, 200)\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_GETSENTRALOKASI_WEBADMIN_SCHEMA)",
              "err": {},
              "uuid": "8e166b6a-d5b9-4e36-9ab6-dede7cf2a0e6",
              "parentUUID": "544cb4cf-c0df-4079-9107-0c4bbb532e6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit lokasi",
              "fullTitle": "Web lokasi Edit lokasi",
              "timedOut": false,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.updateLokasi(id, data.VALID_PUTLOKASI, token)\n//result\nassert.equal(response.status, 200)\nlet resultObject = {};\nObject.keys(response.data.data).map((key) => { // iterate over the keys\nresultObject = {\n    ...resultObject,\n    ['data']: {...response.data.data['data'], ...response.data.data['fasilitas']} // merge two or more objects \n}\nreturn;\n});\n\nconst data_res = Object.fromEntries(\n    Object.entries(resultObject.data).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\nconst data_in = Object.fromEntries(\n    Object.entries(data.VALID_PUTLOKASI).map(([key, value]) => [key, typeof value == 'string' ? value.toLowerCase() : value])\n  );\n  //exclude\n//   assert.deepEqualExcluding()\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_EDIT_LOKASI_SCHEMA)",
              "err": {},
              "uuid": "94e9f9cd-ef5e-453b-aa68-461e1742960c",
              "parentUUID": "544cb4cf-c0df-4079-9107-0c4bbb532e6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hapus lokasi",
              "fullTitle": "Web lokasi Hapus lokasi",
              "timedOut": false,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.deleteLokasi(id, token)\n//result\nassert.equal(response.status, 200)\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_DELETE_LOKASI_SCHEMA)",
              "err": {},
              "uuid": "af3214e0-9a6b-437c-9338-6b2d9e30dd14",
              "parentUUID": "544cb4cf-c0df-4079-9107-0c4bbb532e6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get dan Cek Image Lokasi",
              "fullTitle": "Web lokasi Get dan Cek Image Lokasi",
              "timedOut": false,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.getImagelokasi(id, token)\n//result\nassert.equal(response.status, 200)\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_GETIMAGELOKASI_SCHEMA)",
              "err": {},
              "uuid": "1ea5b9d6-1955-4778-a946-e99751252d7d",
              "parentUUID": "544cb4cf-c0df-4079-9107-0c4bbb532e6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Fasilitas Lokasi",
              "fullTitle": "Web lokasi Get Fasilitas Lokasi",
              "timedOut": false,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.getFasilitaslokasi(id, token)\n//result\nassert.equal(response.status, 200)\n//console.log(response.data)\n//schema\nexpect(response.data).to.be.jsonSchema(schema.VALIDATE_GETFASILITASLOKASI_SCHEMA)",
              "err": {},
              "uuid": "03bc54ff-a941-4421-bc03-1ea5916a5ced",
              "parentUUID": "544cb4cf-c0df-4079-9107-0c4bbb532e6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Lokasi By Id",
              "fullTitle": "Web lokasi Get Lokasi By Id",
              "timedOut": false,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await QoinAPI.getLokasibyid(id, token)\n//result\n// assert.equal(response.status, 200)\n// expect(response.data).to.be.jsonSchema(schema.VALIDATE_GETLOKASIBYID_SCHEMA)",
              "err": {},
              "uuid": "0d1533c4-5b85-4da0-855a-d93ffa4bdf20",
              "parentUUID": "544cb4cf-c0df-4079-9107-0c4bbb532e6e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8732a3b3-b854-45c9-9ce6-7c918623784a",
            "29f913a2-c448-42c8-8df9-cccd546c9f5b",
            "8e166b6a-d5b9-4e36-9ab6-dede7cf2a0e6",
            "94e9f9cd-ef5e-453b-aa68-461e1742960c",
            "af3214e0-9a6b-437c-9338-6b2d9e30dd14",
            "1ea5b9d6-1955-4778-a946-e99751252d7d",
            "03bc54ff-a941-4421-bc03-1ea5916a5ced",
            "0d1533c4-5b85-4da0-855a-d93ffa4bdf20"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports"
      },
      "version": "6.2.0"
    }
  }
}